[tox]
minversion = 3.4.0
envlist = py{37,38,39}-{mywindows}, general
tox_pyenv_fallback = False
recreate = True
requires = tox-envfile
           pip
           setuptools
           wheel
           twine

[testenv]
passenv = USERNAME
# environment will be skipped if regular expression does not match against the sys.platform string
platform = mylinux: linux
           mymacos: darwin
           mywindows: win32
commands_pre =
    python -c 'print("herefore")'
    mylinux: python -c 'print("Building on Linux")'
    mymacos: python -c 'print("Building on MacOS")'
    mywindows: python -c 'print("Building on Windows")'

commands =
    #python setup.py clean --all
    python setup.py bdist_wheel --python-tag {envname} --plat-name win32
    #python setup.py clean --all
    python setup.py bdist_wheel --python-tag {envname} --plat-name win_amd64

whitelist_externals =
    Remove-Item
    echo
    pwd
    ls
    del
deps = -rrequirements.txt
[testenv:py39-mywindows]

commands_post = {envpython} -m twine upload --repository testpypi dist/*

#[testenv:general]
#commands =
#    python setup.py sdist
#commands_post = {envpython} -m twine upload --repository testpypi dist/*
#commands_post = python -m twine upload dist/*

#pip install -i https://test.pypi.org/simple/ DelphiVCL_github-lucioric
#python -m pip install -Ui https://test.pypi.org/simple/ DelphiVCL_github-lucioric