name: Build

on: 
  push:
    branches:
      - main
      # Release branches
      - "[0-9]+.[0-9]+.X"

    tags:
      - '*'

  # Manual run
  workflow_dispatch:
  
jobs:    
  wheels:
    name: Build ${{ matrix.arch }} WHEELS on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}    
    needs: [sdist_win]
    strategy:      
      #https://github.com/scikit-build/cmake-python-distributions/blob/master/.github/workflows/build.yml
      matrix:
        include:
          - os: windows-2019
            arch: "AMD64"
          - os: windows-2019
            arch: "x86"

    steps:
      - name: "Checkout files"
        uses: actions/checkout@v2
             
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1        
        env:
          CIBW_ARCHS: "${{ matrix.arch }}"                       
          
      - name: "Upload artifact"
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl
          if-no-files-found: error
               
  upload_pypi_test:
    name: Upload to PyPI test
    needs: [wheels]
    runs-on: ubuntu-latest
    steps:                       
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
          
      - name: Publish package to TestPyPI      
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.test_pypi_username }}
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/    
          
  upload_pypi:
    name: Upload to PyPI
    needs: [wheels]
    runs-on: ubuntu-latest
    # upload to PyPI test on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:                       
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
          
      - name: Publish package to PyPI      
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.pypi_username }}
          password: ${{ secrets.pypi_password }}               
